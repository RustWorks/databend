// Copyright 2021 Datafuse Labs.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package meta;

message Empty {}
message GetRequest { string key = 1; }

message GetReply {
  bool ok = 1;
  string value = 2;
}

message RaftRequest {
  string data = 1;
}

message RaftReply {
  string data = 1;
  string error = 2;
}

message HandshakeRequest {
  uint64 protocol_version = 1;
  bytes payload = 2;
}

message HandshakeResponse {
  uint64 protocol_version = 1;
  bytes payload = 2;
}

// Data chunk for export/import meta data
message ExportedChunk {
  repeated string data = 10;
}

service RaftService {

  rpc Write(RaftRequest) returns (RaftReply) {}
  rpc Get(GetRequest) returns (GetReply) {}

  /// Forward a request to other
  rpc Forward(RaftRequest) returns (RaftReply) {}

  // raft RPC

  rpc AppendEntries(RaftRequest) returns (RaftReply);
  rpc InstallSnapshot(RaftRequest) returns (RaftReply);
  rpc Vote(RaftRequest) returns (RaftReply);
}

service MetaService {
  // handshake
  rpc Handshake(stream HandshakeRequest) returns (stream HandshakeResponse);

  // message
  rpc WriteMsg(RaftRequest) returns (RaftReply);
  rpc ReadMsg(RaftRequest) returns (RaftReply);

  // Export all meta data.
  //
  // Including raft hard state, logs and state machine.
  // The exported data is a list of json strings in form of `(tree_name, sub_tree_prefix, key, value)`.
  rpc Export(Empty) returns (stream ExportedChunk);
}

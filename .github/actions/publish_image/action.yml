name: 'Publish Image'
description: 'Publish releases in container image'
inputs:
  dockerhub_username:
    description: "The user name of dockerhub"
    required: true
  dockerhub_token:
    description: "The token of dockerhub"
    required: true
  dockerhub_namespace:
    description: "The namespace of dockerhub"
    required: true
runs:
  using: "composite"
  steps:
    - name: Maximize build space
      uses: ./.github/actions/cleanup

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # setup QEMU so that we can build the image for linux/arm64
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_token }}

    - uses: actions/download-artifact@v2
      with:
        name: release-${{ github.sha }}-${{ matrix.config.os }}-${{ matrix.config.target }}
        path: ./target/release

    - name: Build and publish databend image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ inputs.dockerhub_namespace }}/databend:master # assume latest tag is the latest release tag
        platforms: ${{ matrix.config.platform }}
        context: .
        file: ./docker/Dockerfile
    - name: Image digest
      shell: bash
      run: echo ${{ steps.docker_build.outputs.digest }}

    - name: Build and publish perf_tools images
      id: docker_build_perf
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ inputs.dockerhub_namespace }}/perf-tool:latest # assume latest tag is the latest release tag
        platforms: ${{ matrix.config.platform }}
        context: .
        file: ./docker/perf-tool/Dockerfile
    - name: Perf image digest
      shell: bash
      run: echo ${{ steps.docker_build_perf.outputs.digest }} && cat ./tests/perfs/perfs.yaml
